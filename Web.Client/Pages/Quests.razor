@page "/quests"
@page "/quests/{QuestIndex:int}"

@using Web.Client.Models

@inject HttpClient HttpClient

<PageTitle>My Quests Log</PageTitle>

<div class="container mt-5">
    <div class="box has-background-dark has-text-white-ter">
        <h3 class="title is-3 has-text-info">
            Quest Log
        </h3>
        <p class="subtitle is-6 has-text-grey-light">
            Details of my completed adventures and acquired loot.
        </p>

        <div class="columns is-multiline">
            @* Left Column: Quest Selection Menu (25% width on desktop) *@
            <div class="column is-one-quarter">
                <aside class="menu has-background-grey-darker p-3" style="border-radius: 6px;">
                    <p class="menu-label has-text-warning">
                        Completed Quests
                    </p>
                    <ul class="menu-list"
                        style="list-style: none; margin-left: 0;"> @* Inline style to remove bullet points *@
                        @foreach (var quest in _quests)
                        {
                            <li>
                                <a @onclick="() => SelectQuest(quest)"
                                   class="@(SelectedQuest == quest ? "is-active has-background-grey-dark" : "has-text-white-ter")"
                                   style="display: block; padding: 0.75em 1em; border-radius: 4px;">
                                    <span class="icon is-small mr-2"><i class="bi @quest.IconClass"></i></span><span
                                        class="has-text-warning is-size-6">@quest.Title</span>
                                    <br/>
                                    <span class="is-size-7 has-text-grey-light">@quest.DescriptionShort</span>
                                </a>
                            </li>
                        }
                    </ul>
                </aside>
            </div>

            @* Right Column: Quest Detail View (75% width on desktop) *@
            <div class="column is-three-quarters">
                @if (SelectedQuest != null)
                {
                    <div class="card has-background-grey-darker has-text-white-ter">
                        <div class="card-content">
                            @* Top section: Title, Subtitle, and Main Description *@
                            <p class="title is-4 has-text-warning mb-2">
                                <span class="icon mr-2"><i
                                        class="bi @SelectedQuest.IconClass"></i></span>@SelectedQuest.Title
                            </p>
                            <p class="subtitle is-6 has-text-grey-light">
                                @SelectedQuest.Subtitle
                            </p>
                            <div class="content is-size-6">
                                <h5 class="title is-5 has-text-info mt-4">Quest Details:</h5>
                                <p>@((MarkupString)SelectedQuest.Description)</p> @* Changed from DetailedDescription to Description based on your previous model *@
                            </div>

                            @* Bottom section: Two columns for rewards/XP/links and image *@
                            <div class="columns is-vcentered mt-4"> @* Added is-vcentered for vertical alignment *@
                                @* Bottom Left: Rewards, XP, Links (50% width on desktop) *@
                                <div class="column is-half">
                                    @if (SelectedQuest.Rewards.Any())
                                    {
                                        <div class="mb-6">
                                            <h5 class="title is-5 has-text-success mt-4 mb-0">Rewards:</h5>
                                            <ul style="list-style: none;" class="ml-2">
                                                @foreach (var reward in SelectedQuest.Rewards)
                                                {
                                                    <li>
                                                    <span class="icon is-small mr-1">
                                                        <i
                                                            class="bi bi-star-fill"></i></span> @reward</li>
                                                }
                                                @if (SelectedQuest.ExpReward > 0)
                                                {
                                                    <li class="has-text-warning">
                                                    <span class="icon is-small mr-1">
                                                        <i
                                                            class="bi bi-star-fill"></i></span> @SelectedQuest.ExpReward XP
                                                    </li>
                                                }
                                            </ul>
                                        </div>
                                    }

                                    @if (SelectedQuest.Links.Any())
                                    {
                                        <div class="buttons">
                                            @foreach (var link in SelectedQuest.Links)
                                            {
                                                <a href="@link.Value" target="_blank"
                                                   class="button is-link is-small is-rounded">
                                                    <span class="icon is-small mr-1">
                                                        <i class="bi @(link.Key == "GitHub" ? "bi-github" : "bi-link-45deg")"></i>
                                                    </span>
                                                    <span>@link.Key</span>
                                                </a>
                                            }
                                        </div>
                                    }
                                </div>

                                @* Bottom Right: Image (50% width on desktop) *@
                                <div
                                    class="column is-half is-text-centered"> @* Added has-text-centered for horizontal centering *@
                                    @if (!string.IsNullOrEmpty(SelectedQuest.ImagePath))
                                    {
                                        <figure class="image is-square"
                                                style="width: 256px; margin: 0 auto;"> @* Fixed size image container *@
                                            <img src="@SelectedQuest.ImagePath" alt="Quest Image"
                                                 style="object-fit: cover; border-radius: 6px;">
                                        </figure>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                }
                else
                {
                    <div
                        class="notification is-info is-light has-text-centered has-background-grey-darker has-text-white-ter">
                        <span class="icon mr-2"><i class="bi bi-info-circle-fill"></i></span> Select a quest from the
                        left menu to view its details.
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@code {

    private List<QuestModel> _quests = [];
    private QuestModel? SelectedQuest { get; set; }
    [Parameter] public int QuestIndex { get; set; }

    protected override async Task OnInitializedAsync()
    {
        _quests = await HttpClient.GetFromJsonAsync<List<QuestModel>>("content/quests.json") ?? [];
        if (QuestIndex != 0 && _quests.Count > QuestIndex)
            SelectedQuest = _quests[QuestIndex];
        else
            SelectedQuest = _quests.FirstOrDefault();
    }

    private void SelectQuest(QuestModel quest)
    {
        SelectedQuest = quest;
    }

}
